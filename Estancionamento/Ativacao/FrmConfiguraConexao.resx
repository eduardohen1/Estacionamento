<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANGhoYOFhV
        UX+Wk42/0s3I8PHs5P/98+T/s66p/yIeGccAAAFXAAAAJAAAAA0AAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIDECEfHThEQDxhbmlilauk
        m9fd1sz8+/Tr//716v/x5df/7dm8/+LTvP+spp//WEQr/z03MdoHBgZvAAAANgAAAB0AAAAHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEtHQEawpJXe28+8/Ovd
        yv/s3cn//+rI/+zNov/dt4P/2LB5/8aibf/VuZD/7+bZ/6ehm/9+TAz/gV8z/05GPucMCwqEAAAASwAA
        ACkAAAAOAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjYV5X+jR
        r//oyqH/5cOT/9ayf//Rp2v/0at3/9G5l//byrL/5tW8/+3Vtf/t4dD/paGb/1RDMP+MYSn/h2hC/15U
        SfAWFRKUAAAATQAAAC8AAAAUAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQoLIykp
        J1SMg3ax28Oi/9Gziv/PtpL/1b2c/+jInf/duYb/37N2/9amYv/Lomr/27eG//Dm2P+km5P/glso/3Vd
        QP+BZUD/mnlQ/3RmU/koJSCkAAAAVwAAADcAAAAXAAAABwAAAAEAAAAAAAAAAAAAAAANDAsXX1lQk5KF
        dMi0nX/tw5tk/8qjbv/dxqf/4cWd/+XCkf/hu4X/3Ktm/86gX//KrYT/0ruc/9vIrv/axKT/6+DP/5mT
        jf9kUDn/nnZC/31mSf+DbFL/o4Zd/4V1Yf02MCqxAAAAWQAAADEAAAAYAAAABwAAAAAAAAAAAAAAAJCI
        fT3evpL/xo5E/76IQf+wbxn/u4pI/9e+mf/Qr37/yq+I/863lf/Uvp//0LWP/+CzeP/VpGD/3J9N/92g
        TP/i1cL/jYR7/1w/G/9pWUf/hF8w/29QKP9+aVH/g18x/4t1WP9EPjezAAAASQAAACoAAAARAAAAAwAA
        AAAAAAAA0MSyQtWzhP/CkE3/2K10/+O5fv/nxpj/1L2b/9S7mP/ixZ3/48GS/+SlS//Bgyz/zJpV/9ew
        ef/bwZ3/59fC//r07f/Gwbv/b1Iv/2tCDv9tUzT/dFg1/3ZQHv96XTj/flor/5BxSP9NRjqrAAAAOQAA
        ABoAAAAHAAAAAAAAAACflYhG7tKs//rVpf/61aX/6b+G/9u3hf/UuJH/17eL/9G1jf/Uu5f/2MWr/+fc
        zv/z7OT//fTq///y4P//8dj/5Mej/9vKs//X1NT/j4Bt/21FEP90VC3/eGNI/3xVI/+AZUL/i2k9/39u
        WdoEBAQ1AAAAFQAAAAYAAAAAAAAAAGJiWUzevI3/zJtb/76MS/+wdSn/vpBU/9/Sv//k18X/7t/L//rn
        zv//6sz//+bE///huP//3rL//+C5///rz//nzq3/so5g/8Gjgf/j2s//s6qg/4BgNf90UCD/f2RB/4Jf
        Mf+LbUX/h3lj2AQEAxkAAAAFAAAAAgAAAAAAAAAAmZKIXMyndf+3gj7/x5ld/9Sobv/rxZL//+7T///f
        sf//1Zf//92t///py///8uD///Xo///z5f//8OH//+/g///05v//8uH/2byZ/7eLUv/fxaf/6eXi/6qa
        hv95VSP/gmI5/5J2Uv+Ug2vmGhgVDQAAAAAAAAAAAAAAAAAAAACak4dq68+n/+7Lm//11Kf/8s6e/+nD
        kP/arnP/0KBh//Ddxf///fz//fj2//748f//9u7//fTr//7x5P//7tz//ezb///u3f//9uf/9+LM/9ak
        Zf/nuYD//u/f/8e/tP+IaDz/hmIx/6OReO5fWlQPAAAAAAAAAAAAAAAAAAAAALSroXfeu4v/0KFj/8WU
        Uv+6hUD/u4tK/7OAO/+1gj3/5cac/+LOs//Ap4X/wKJ4/9a5kP/StYz/zLGM/9i9mP/jx6L/4Mio/+nQ
        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
        D//AAA//wAAP/8AAD//wAB///AD///////8=
</value>
  </data>
</root>