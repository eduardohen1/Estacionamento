<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AACA+B/wgPwPwOH8AAH//gAB//+AA///wA8=
</value>
  </data>
</root>