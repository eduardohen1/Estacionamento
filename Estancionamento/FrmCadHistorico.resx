<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZK
        Kg5mSipGZkoqhmZKKrNmSirOZkoq0WZKKtdmSirHZkoqtGZKKn1mSio9ZkoqDwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZK
        KhdmSiphZkoqumZKKuhmSirxZkoq9mZKKvpmSir7Zkoq+2ZKKvlmSir3Zkoq72ZKKuRmSiq+ZkoqaGZK
        KhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZK
        KgJmSio5ZkoqoGZKKuRmSir0Zkoq6GZKKrFmSiqOZkoqd2ZKKmtmSip7ZkoqlmZKKr5mSiruZkoq/mZK
        KvdmSiriZkoqpWZKKkNmSioBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZkoqA2ZKKk5mSirFZkoq1GZKKodmSipJZkoqJ2ZKKh1mSioWZkoqEmZKKhdmSiofZkoqK2ZK
        KmJmSiqoZkoq5WZKKv5mSirwZkoqvGZKKltmSioFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZkoqHGZKKklmSipKZkoqHmZKKgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZkoqEGZKKitmSiplZkoqv2ZKKvlmSir1ZkoqxGZKKlxmSioBAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAf8AAAP/gAAH/+AAD//4AD///////////8=
</value>
  </data>
</root>